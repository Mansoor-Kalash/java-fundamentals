/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.*;

public class App {

    public static void main(String[] args) {

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
       ArrayList<String> result =  analyzingWeatherData(weeklyMonthTemperatures);
       for (String item : result){
           System.out.println(item);
       }

        //-----------------------
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = tally(votes);
        System.out.println(winner + " received the most votes!");

        String path = "grates.txt";
        file(path);

    }

    static ArrayList<String> analyzingWeatherData(int[][] weather) {
        ArrayList<String> tempNeverSeen = new ArrayList<String>();

        HashSet<Integer> getWeather = new HashSet<Integer>();

        for (int[] week : weather) {
            for (int day : week) {
                getWeather.add(day);
            }
        }
        int max = (int) Collections.max(getWeather);
        int min = (int) Collections.min(getWeather);
        tempNeverSeen.add("High: " + Integer.toString(max));
        tempNeverSeen.add("Low: " + Integer.toString(min));

        for (int i = min + 1; i < max; i++) {
            if (!getWeather.contains(i)) {
                tempNeverSeen.add("Never saw temperature: " + Integer.toString(i));
            }

        }
        return tempNeverSeen;
    }


    static String tally(List<String> votes) {
        String winner = "";
        HashMap<String, Integer> names = new HashMap<String, Integer>();
        for (String name : votes) {
            names.put(name, 0);
        }
        for (String name : votes) {
            names.put(name, names.get(name) + 1);
        }
        int maxVotes = (Collections.max(names.values()));  // This will return max number of Votes
        for (Map.Entry<String, Integer> entry : names.entrySet()) {  // Itrate through Votes in HashMap
            if (entry.getValue() == maxVotes) {
                winner = entry.getKey();     // get Name Of The Winner
            }
        }
        return winner;
    }

    static void file (String filePath) {
        Path path = Paths.get(filePath);
        try {
            int lineNumber = 1;

            BufferedReader reader = Files.newBufferedReader(path);
            String line = reader.readLine();
            while (line != null ) {
                if (line.indexOf("{")==-1&&line.indexOf("}")==-1&&
                        line.indexOf("if")==-1&&line.indexOf("else")==-1&&line.lastIndexOf(";")==-1&&
                    line.matches(".*\\w.*")){
                        System.out.println("Line "+lineNumber+": Missing semicolon.");
                }
//                System.out.println(line);
                line = reader.readLine();
                lineNumber+=1;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }



    }


}






